{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x89e888Af6a3d5B30A6682044b8faa470216069fb",
      "txHash": "0xd51782b50d11d0280705d88417570950c73e62f60e9661e529cfb1cf175be969",
      "kind": "uups"
    },
    {
      "address": "0xae06008De9c38383Ee5B0271D837693991e0610b",
      "txHash": "0x77469a07b8c7fa0d0c9fc7dc0192706e2c443328f7fde8666dc48625990649c9",
      "kind": "uups"
    },
    {
      "address": "0xc91B3fa5908E618b61b9d588dBBD1634F7e4D2ca",
      "txHash": "0x26421f226e2a43ebc0a5373944694fb462b4288176d6c7a662988f277e22ee1c",
      "kind": "uups"
    }
  ],
  "impls": {
    "f27d566b6dfe0e2aae3e7a749290f700ac574dae1d51853944930b63523f70cf": {
      "address": "0x7690beED5a970505e4C9b072E55724eD397215C7",
      "txHash": "0x97a9c2d78c3709568ff74ad289bb661f5e92e362f40901d5fd71d493010f2dd7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "autoGenerateId",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:15"
          },
          {
            "label": "autoIds",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:16"
          },
          {
            "label": "allUserAddresses",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:17"
          },
          {
            "label": "userDetails",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_struct(UserAddressAndIdDetails)4811_storage)dyn_storage",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:18"
          },
          {
            "label": "checkUserAddressAndIdLinked",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:44"
          },
          {
            "label": "checkOldAddressAndNewAddressLinked",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:45"
          },
          {
            "label": "userInfostruct",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)4806_storage))",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:46"
          },
          {
            "label": "linkIdToUserAddress",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:47"
          },
          {
            "label": "linkUserAddressToId",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:48"
          },
          {
            "label": "userVerify",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registration",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Registration.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(UserAddressAndIdDetails)4811_storage)dyn_storage": {
            "label": "struct Registration.UserAddressAndIdDetails[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserInformation)4806_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Registration.UserInformation))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UserInformation)4806_storage)": {
            "label": "mapping(uint256 => struct Registration.UserInformation)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserAddressAndIdDetails)4811_storage": {
            "label": "struct Registration.UserAddressAndIdDetails",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInformation)4806_storage": {
            "label": "struct Registration.UserInformation",
            "members": [
              {
                "label": "firstName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "email",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "phoneNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "walletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e306f55c53d3c26d1f3dea3e2aa49566a897e1abb4059e79c21b3a5f64da04b6": {
      "address": "0x36B6A0391467F2CE89a6F168824922830b41FA0d",
      "txHash": "0x8147847e780868881eeae81c2944552a6fb53436cfd3417a2b97076d44791301",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "contractAdmin",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:22"
          },
          {
            "label": "registrationContract",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:23"
          },
          {
            "label": "EVNT",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:24"
          },
          {
            "label": "paymentAddress",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:25"
          },
          {
            "label": "autoGenerateId",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:27"
          },
          {
            "label": "nftId",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:28"
          },
          {
            "label": "ticketPriceWei",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:29"
          },
          {
            "label": "nftIds",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:31"
          },
          {
            "label": "autoIds",
            "offset": 0,
            "slot": "309",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:32"
          },
          {
            "label": "ticketsCountForEvents",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:33"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "311",
            "type": "t_string_storage",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:35"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "312",
            "type": "t_string_storage",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:36"
          },
          {
            "label": "linkIdToEvent",
            "offset": 0,
            "slot": "313",
            "type": "t_mapping(t_uint256,t_struct(EventInformation)7743_storage)",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:38"
          },
          {
            "label": "linkEventIdToTicketQuantity",
            "offset": 0,
            "slot": "314",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:39"
          },
          {
            "label": "eventPubTime",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:40"
          },
          {
            "label": "eventStartTime",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:41"
          },
          {
            "label": "eventEndTime",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:42"
          },
          {
            "label": "eventMapName",
            "offset": 0,
            "slot": "318",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:43"
          },
          {
            "label": "adminBalanceAssociatedToEvent",
            "offset": 0,
            "slot": "319",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:44"
          },
          {
            "label": "restrictMaxBuyForUser",
            "offset": 0,
            "slot": "320",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:45"
          },
          {
            "label": "perEventCollection",
            "offset": 0,
            "slot": "321",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:46"
          },
          {
            "label": "forQrVerification",
            "offset": 0,
            "slot": "322",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "Ticketing",
            "src": "contracts/Projects/Eventbrite/With_Proxy/Ticketing.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInformation)7743_storage)": {
            "label": "mapping(uint256 => struct Ticketing.EventInformation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EventInformation)7743_storage": {
            "label": "struct Ticketing.EventInformation",
            "members": [
              {
                "label": "eventTitle",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "venue",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketsQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxTicketPerPerson",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "publishTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
